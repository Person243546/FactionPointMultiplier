using HarmonyLib;
using RimWorld;
using System.Collections.Generic;

using Verse;

namespace FactionPointMultiplier
{
    [StaticConstructorOnStartup]
    public static class Startup
    {
        public static FactionDef[] allFactions;
        static Startup()
        {
            FactionlistMaker();
            AutogenerateDict();
            var harmony = new Harmony("Person.FactionPointMultiplier");
            harmony.PatchAll();
            Log.Message("Faction Point Multiplier Initialized");
        }

        private static void AutogenerateDict()
        {
            if (FactionPointMultiplierMod.settings.factionandmultiplier is null)
            {
                FactionPointMultiplierMod.settings.factionandmultiplier = new Dictionary<string, float>();
            }
            for (int i = allFactions.Length; i-- > 0;)
            {

                if (!FactionPointMultiplierMod.settings.factionandmultiplier.ContainsKey(allFactions[i].defName))
                {
                    FactionPointMultiplierMod.settings.factionandmultiplier.Add(allFactions[i].defName,1f);
                }
            }
        }
        private static void FactionlistMaker() 
        {
            var workinglist = new List<FactionDef>();
            for (int i = DefDatabase<FactionDef>.DefCount; i-- > 0;)
            {
                var def = DefDatabase<FactionDef>.AllDefsListForReading[i];
                if (def.pawnGroupMakers != null)
                {
                    workinglist.Add(def);
                }
            }
            allFactions = workinglist.ToArray();
        }
    }
}
